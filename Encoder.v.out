#! /c/Source/iverilog-install/bin/vvp
:ivl_version "12.0 (devel)" "(s20150603-1110-g18392a46)";
:ivl_delay_selection "TYPICAL";
:vpi_time_precision + 0;
:vpi_module "C:\iverilog\lib\ivl\system.vpi";
:vpi_module "C:\iverilog\lib\ivl\vhdl_sys.vpi";
:vpi_module "C:\iverilog\lib\ivl\vhdl_textio.vpi";
:vpi_module "C:\iverilog\lib\ivl\v2005_math.vpi";
:vpi_module "C:\iverilog\lib\ivl\va_math.vpi";
S_0000024ef5262ce0 .scope module, "Encoder" "Encoder" 2 2;
 .timescale 0 0;
    .port_info 0 /INPUT 1 "clk";
    .port_info 1 /INPUT 1 "reset";
    .port_info 2 /INPUT 16 "binary_data";
    .port_info 3 /OUTPUT 288 "poly_coeff";
P_0000024ef5263450 .param/l "INPUT_WIDTH" 0 2 4, +C4<00000000000000000000000000010000>;
P_0000024ef5263488 .param/l "POLY_SIZE" 0 2 3, +C4<00000000000000000000000000010000>;
P_0000024ef52634c0 .param/l "SCALE_FACTOR" 0 2 5, +C4<00000000000000000000000000000010>;
o0000024ef5298fd8 .functor BUFZ 16, C4<zzzzzzzzzzzzzzzz>; HiZ drive
v0000024ef52632f0_0 .net "binary_data", 15 0, o0000024ef5298fd8;  0 drivers
o0000024ef5299008 .functor BUFZ 1, C4<z>; HiZ drive
v0000024ef5262e70_0 .net "clk", 0 0, o0000024ef5299008;  0 drivers
v0000024ef5262f10_0 .var/i "i", 31 0;
v0000024ef5262fb0_0 .var "poly_coeff", 287 0;
v0000024ef5263050 .array "poly_internal", 15 0, 17 0;
o0000024ef5299398 .functor BUFZ 1, C4<z>; HiZ drive
v0000024ef52630f0_0 .net "reset", 0 0, o0000024ef5299398;  0 drivers
v0000024ef5263050_0 .array/port v0000024ef5263050, 0;
v0000024ef5263050_1 .array/port v0000024ef5263050, 1;
v0000024ef5263050_2 .array/port v0000024ef5263050, 2;
v0000024ef5263050_3 .array/port v0000024ef5263050, 3;
E_0000024ef5247e20/0 .event anyedge, v0000024ef5263050_0, v0000024ef5263050_1, v0000024ef5263050_2, v0000024ef5263050_3;
v0000024ef5263050_4 .array/port v0000024ef5263050, 4;
v0000024ef5263050_5 .array/port v0000024ef5263050, 5;
v0000024ef5263050_6 .array/port v0000024ef5263050, 6;
v0000024ef5263050_7 .array/port v0000024ef5263050, 7;
E_0000024ef5247e20/1 .event anyedge, v0000024ef5263050_4, v0000024ef5263050_5, v0000024ef5263050_6, v0000024ef5263050_7;
v0000024ef5263050_8 .array/port v0000024ef5263050, 8;
v0000024ef5263050_9 .array/port v0000024ef5263050, 9;
v0000024ef5263050_10 .array/port v0000024ef5263050, 10;
v0000024ef5263050_11 .array/port v0000024ef5263050, 11;
E_0000024ef5247e20/2 .event anyedge, v0000024ef5263050_8, v0000024ef5263050_9, v0000024ef5263050_10, v0000024ef5263050_11;
v0000024ef5263050_12 .array/port v0000024ef5263050, 12;
v0000024ef5263050_13 .array/port v0000024ef5263050, 13;
v0000024ef5263050_14 .array/port v0000024ef5263050, 14;
v0000024ef5263050_15 .array/port v0000024ef5263050, 15;
E_0000024ef5247e20/3 .event anyedge, v0000024ef5263050_12, v0000024ef5263050_13, v0000024ef5263050_14, v0000024ef5263050_15;
E_0000024ef5247e20 .event/or E_0000024ef5247e20/0, E_0000024ef5247e20/1, E_0000024ef5247e20/2, E_0000024ef5247e20/3;
E_0000024ef5247ea0 .event posedge, v0000024ef52630f0_0, v0000024ef5262e70_0;
    .scope S_0000024ef5262ce0;
T_0 ;
    %wait E_0000024ef5247ea0;
    %load/vec4 v0000024ef52630f0_0;
    %flag_set/vec4 8;
    %jmp/0xz  T_0.0, 8;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0000024ef5262f10_0, 0, 32;
T_0.2 ;
    %load/vec4 v0000024ef5262f10_0;
    %cmpi/s 16, 0, 32;
    %jmp/0xz T_0.3, 5;
    %pushi/vec4 0, 0, 18;
    %ix/getv/s 3, v0000024ef5262f10_0;
    %ix/load 4, 0, 0; Constant delay
    %assign/vec4/a/d v0000024ef5263050, 0, 4;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0000024ef5262f10_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %store/vec4 v0000024ef5262f10_0, 0, 32;
    %jmp T_0.2;
T_0.3 ;
    %jmp T_0.1;
T_0.0 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0000024ef5262f10_0, 0, 32;
T_0.4 ;
    %load/vec4 v0000024ef5262f10_0;
    %cmpi/s 16, 0, 32;
    %jmp/0xz T_0.5, 5;
    %load/vec4 v0000024ef52632f0_0;
    %pad/u 18;
    %ix/load 4, 2, 0;
    %flag_set/imm 4, 0;
    %shiftl 4;
    %ix/getv/s 3, v0000024ef5262f10_0;
    %ix/load 4, 0, 0; Constant delay
    %assign/vec4/a/d v0000024ef5263050, 0, 4;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0000024ef5262f10_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %store/vec4 v0000024ef5262f10_0, 0, 32;
    %jmp T_0.4;
T_0.5 ;
T_0.1 ;
    %jmp T_0;
    .thread T_0;
    .scope S_0000024ef5262ce0;
T_1 ;
    %wait E_0000024ef5247e20;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0000024ef5262f10_0, 0, 32;
T_1.0 ;
    %load/vec4 v0000024ef5262f10_0;
    %cmpi/s 16, 0, 32;
    %jmp/0xz T_1.1, 5;
    %ix/getv/s 4, v0000024ef5262f10_0;
    %load/vec4a v0000024ef5263050, 4;
    %load/vec4 v0000024ef5262f10_0;
    %addi 1, 0, 32;
    %muli 18, 0, 32;
    %subi 1, 0, 32;
    %pad/s 34;
    %subi 17, 0, 34;
    %ix/vec4/s 4;
    %store/vec4 v0000024ef5262fb0_0, 4, 18;
    %load/vec4 v0000024ef5262f10_0;
    %addi 1, 0, 32;
    %store/vec4 v0000024ef5262f10_0, 0, 32;
    %jmp T_1.0;
T_1.1 ;
    %jmp T_1;
    .thread T_1, $push;
# The file index is used to find the file name in the following table.
:file_names 3;
    "N/A";
    "<interactive>";
    "Encoder.v";
